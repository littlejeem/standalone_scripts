#!/usr/bin/env bash

#################################################################################
### "Script is designed to do the inital setup of my jotta-cli backups        ###
### "Best to place in or symlink (ln -s filepath linkname) /usr/local/bin"    ###
#################################################################################

#+--------------------------------------+
#+---"Exit Codes & Logging Verbosity"---+
#+--------------------------------------+
# pick from 64 - 113 (https://tldp.org/LDP/abs/html/exitcodes.html#FTN.AEN23647)
# exit 0 = Success
# exit 64 = Variable Error
# exit 65 = Sourcing file/folder error
# exit 66 = Processing Error
# exit 67 = Required Program Missing

#verbosity levels
#silent_lvl=0
#crt_lvl=1
#err_lvl=2
#wrn_lvl=3
#ntf_lvl=4
#inf_lvl=5
#dbg_lvl=6


#+-----------------------+
#+---"Set script name"---+
#+-----------------------+
# imports the name of this script
# failure to to set this as lockname will result in check_running failing and 'hung' script
# manually set this if being run as child from another script otherwise will inherit name of calling/parent script
scriptlong=`basename "$0"`
lockname=${scriptlong}


#+---------------------+
#+---"Set Variables"---+
#+---------------------+
#set default logging level, failure to set this will cause a 'unary operator expected' error
#set default logging level, remember at level 3 and lower, only esilent messages show, best to include an override in getopts
verbosity=3
version="0.1" #
script_pid=$(echo $$)


#+--------------------------+
#+---Source helper script---+
#+--------------------------+
source /usr/local/bin/helper_script.sh


#+---------------------------------------+
#+---"check if script already running"---+
#+---------------------------------------+
check_running


#+-------------------+
#+---Set functions---+
#+-------------------+
helpFunction () {
   echo ""
   echo "Usage: $0 $scriptlong"
   echo "Usage: $0 -dV selects dry-run with verbose level logging"
   echo -e "\t-d Use this flag to specify dry run, no files will be converted, useful in conjunction with -V or -G "
   echo -e "\t Running the script with no flags causes default behaviour with logging level set via 'verbosity' variable"
   echo -e "\t-S Override set verbosity to specify silent log level"
   echo -e "\t-V Override set verbosity to specify Verbose log level"
   echo -e "\t-G Override set verbosity to specify Debug log level"
   echo -e "\t-h Use this flag for help"
   if [ -d "/tmp/$lockname" ]; then
     edebug "removing lock directory"
     rm -r "/tmp/$lockname"
   else
     edebug "problem removing lock directory"
   fi
   exit 65 # Exit script after printing help
}

set_exclusions () {
  edebug "Checking /var/lib/$arr exists..."
  if [[ -d /var/lib/$arr ]]; then
    edebug "...location exists"
    edebug "adding /var/lib/$arr to jotta-cli Backups"
    jotta-cli add /var/lib/$arr
    edebug "setting jotta-cli exclusions for /var/lib/$arr"
    jotta-cli ignores add --pattern Definitiions --backup $arr
    jotta-cli ignores add --pattern MediaCover --backup $arr
    jotta-cli ignores add --pattern asp --backup $arr
    jotta-cli ignores add --pattern logs --backup $arr
    jotta-cli ignores add --pattern UpdateLogs --backup $arr
    jotta-cli ignores add --pattern *.db-shm --backup $arr
    jotta-cli ignores add --pattern *.db --backup $arr
    jotta-cli ignores add --pattern *.db-wal --backup $arr
    jotta-cli ignores add --pattern *.xml --backup $arr
    jotta-cli ignores add --pattern *.pid --backup $arr
    arr=
  fi

}
#+------------------+
#+---Main Script----+
#+------------------+
arr=prowlarr
set_exclusions

arr=sonarr
set_exclusions

arr=radarr
set_exclusions

arr=lidarr
set_exclusions

arr=readarr
iset_exclusions

arr=readarr_audio
set_exclusions

edebug "setting jotta-cli scan"
jotta-cli scan
edebug "displaying jotta-cli status"
jotta-cli status
